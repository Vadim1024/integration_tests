sudo: required
dist: trusty
services: docker
language: python
python: 3.5
cache:
  timeout: 600

jobs:
  include:
    - stage: integration-test
      os: linux
      env:
      - TEST='NODES_SYNC'
      script:
      - docker-compose --version
      - export PYTHONPATH=$(pwd)
      - pytest -s -m oneminaftersync

    - stage: integration-test
      os: linux
      env:
      - TEST='RUN_10MIN'
      script:
      - docker-compose --version
      - export PYTHONPATH=$(pwd)
      - pytest --noconftest -s -m runfor10minutes

    - stage: integration-test
      os: linux
      env:
      - TEST='FORK_RECOVERY'
      script:
      - sudo ln -fs /home/travis/virtualenv/python3.5.5/bin/python /opt/pyenv/shims/python
      - python --version
      - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      - sudo add-apt-repository -y ppa:tigerite/mint-xorg-update
#      - sudo add-apt-repository -y ppa:deadsnakes/ppa
      - sudo apt update -y
      - sudo apt-get -y install swig3.0 python3-dev python3-pip build-essential cmake3 ninja-build
#      - sudo apt-get -y install gcc-7 g++-7 pkg-config libssl-dev libffi-dev libhwloc-dev libboost-dev
      - sudo apt-get -y install gcc g++ pkg-config libssl-dev libffi-dev libhwloc-dev libboost-dev
#      - sudo apt-get -y install python3.5
#      - sudo ln -s /bin/python3.5 /opt/pyenv/shims/python
#      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 1
      - sh qrlnet/fork_recovery_bootstrap.sh
      - docker-compose --version
      - export PYTHONPATH=$(pwd)
      - pytest --noconftest -s -m forkrecovery

    - stage: integration-test
      os: linux
      install:
          - sudo apt-get -y install nodejs
      script:
          - cd tests/js && npm install && npm test
